#pragma once

//======================================================================

#include <upl/common.hpp>
#include <upl/definitions.hpp>
#include <upl/ast_details.hpp>

#include <list>
#include <memory>

//======================================================================

namespace UPL {
	namespace AST {

//======================================================================

//----------------------------------------------------------------------

class Statement : public Node
{
};

//----------------------------------------------------------------------

class Expression : public Statement
{
};

//----------------------------------------------------------------------

class Declaration : public Statement
{
};

//----------------------------------------------------------------------

class Program : public Parent
{
public:
	std::list<Statement *> statements;

	Node * clone () const { return NULL; }
	String printable (int depth = 0) const { return String(); }
};

//----------------------------------------------------------------------

//----------------------------------------------------------------------
//======================================================================
//----------------------------------------------------------------------
//======================================================================

	}	// namespace AST
}	// namespace UPL

//======================================================================

