//======================================================================

#include <upl/types.hpp>

//======================================================================

namespace UPL {
	namespace Types {

//======================================================================
//----------------------------------------------------------------------

Registry::Registry (Registry * parent)
	: m_parent (parent)
	, m_types ()
{
}

//----------------------------------------------------------------------

Registry::~Registry ()
{
}

//----------------------------------------------------------------------

//bool Registry::registerType (std::unique_ptr<Type> new_type)
//{
//	
//}

//----------------------------------------------------------------------

TypePtr Registry::findByName (String const & name) const
{
	auto i = m_types.find(name);
	if (m_types.end() != i)
		return i->second;
	else
		if (m_parent)
			return m_parent->findByName(name);
		else
			return nullptr;
}

//----------------------------------------------------------------------
//======================================================================

	}	// namespace Types
}	// namespace UPL

//======================================================================
